app MyApp {
  wasp: {
    version: "^0.13.1"
  },
  title: "GTMC Demo",
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/signup"
  }
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
  id Int @id @default(autoincrement())
  avatar String
  username String @unique
  password String
  Thread Thread[]
psl=}

entity Thread {=psl
  id Int @id @default(autoincrement())
  title String
  user User @relation(fields: [userId], references: [id])
  userId Int
psl=}

action createThread {
  fn: import { createThread } from "@src/actions.js",
  entities: [Thread]
}

action closeThread {
  fn: import { closeThread } from "@src/actions.js",
  entities: [Thread]
}

query getUserThreads {
  fn: import { getUserThreads } from "@src/queries.js",
  entities: [Thread]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}

route ThreadRoute { path: "/thread/:threadId", to: ThreadPage }
page ThreadPage {
  component: import ThreadPage from "@src/pages/Thread.jsx",
  authRequired: true
}